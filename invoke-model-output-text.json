{
  "inputTextTokenCount": 28,
  "results": [
    {
      "tokenCount": 512,
      "outputText": "\nTo give an arbitrary lambda function access to an S3 bucket, you can use an IAM role. You can use the AWS CLI to create a role and attach a policy that allows the lambda function to access the S3 bucket. Here is an example of an IAM role in yaml format that will give an arbitrary lambda function access to an S3 bucket:\n```yaml\nAWSTemplateFormatVersion: '2010-09-09'\nResources:\n  S3AccessRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: {URL}\n            Action:\n              - sts:AssumeRole\n      Policies:\n        - PolicyName: S3AccessPolicy\n          PolicyDocument:\n            Version: '2012-10-17'\n            Statement:\n              - Effect: Allow\n                Action:\n                  - s3:GetObject\n                  - s3:PutObject\n                Resource:\n                  - 'Fn::Join':\n                    - ''\n                    - - 'arn:aws:s3:::'\n                      - Ref: S3BucketName\n                      - /*\n              - Effect: Allow\n                Action:\n                  - s3:ListBucket\n                Resource:\n                  - 'Fn::Join':\n                    - ''\n                    - - 'arn:aws:s3:::'\n                      - Ref: S3BucketName\n                      - /*\n```\nIn this example, the \"AWSTemplateFormatVersion\" specifies the version of the AWS CloudFormation template format used. The \"Resources\" section defines the resources to be created by the template. In this case, it defines an IAM role named \"S3AccessRole\". The \"AssumeRolePolicyDocument\" specifies the permissions that the role will assume. In this case, it allows the {URL} service to assume the role. The \"Policies\" section defines the policies that are attached to the role. In this case, it defines an \"S3AccessPolicy\" that allows the lambda function to perform the \"s3:GetObject\" and \"s3:PutObject\" actions on the specified S3 bucket. It also allows the lambda function to perform the \"s3:ListBucket\" action on the specified S3 bucket.\nTo create the IAM role",
      "completionReason": "LENGTH"
    }
  ]
}